{"version":3,"sources":["components/Footer.js","components/About.js","components/Experience.js","components/Skills.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","networks","sharedBasicInfo","social","map","network","key","name","className","href","url","target","rel","class","About","titles","profilepic","hello","about","x","toUpperCase","flat","image","resumeBasicInfo","description_header","description","HeaderTitleTypeAnimation","React","memo","steps","loop","prevProp","id","style","cursor","height","src","alt","data-icon","data-inline","fontSize","lineHeight","Experience","work","sectionName","resumeExperience","section_name","experience","i","technologies","mainTechnologies","mainTech","icon","iconClass","technology","Badge","pill","tech","date","years","iconStyle","background","color","textAlign","marginBottom","title","company","marginTop","Skills","skills","sharedSkills","icons","App","state","foo","resumeData","sharedData","pickedLanguage","document","documentElement","lang","this","loadResumeFromPath","loadSharedData","applyPickedLanguage","window","$primaryLanguage","path","$","ajax","dataType","cache","success","data","setState","bind","error","xhr","status","err","alert","basic_info","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","$secondaryLanguage","$primaryLanguageIconId","$secondaryLanguageIconId","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dce7963a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Footer = (props) => {\n  let networks = [];\n  if (props.sharedBasicInfo) {\n    networks = props.sharedBasicInfo.social.map((network) => {\n      return (\n        <span key={network.name} className=\"m-4\">\n          <a href={network.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className={network.class}></i>\n          </a>\n        </span>\n      );\n    });\n  }\n\n  return (\n    <footer>\n      <div className=\"col-md-12\">\n        <div className=\"social-links\">{networks}</div>\n\n        <div className=\"copyright py-4 text-center\">\n          <div className=\"container\">\n            <small>\n              Made by {\" \"}\n              {props.sharedBasicInfo\n                ? props.sharedBasicInfo.name\n                : \"???\"}\n            </small>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Typical from \"react-typical\";\n\nconst About = (props) => {\n  let name = '';\n  let titles;\n  let profilepic;\n  let hello = '';\n  let about = '';\n\n  if (props.sharedBasicInfo) {\n    name = props.sharedBasicInfo.name;\n    titles = props.sharedBasicInfo.titles.map(x => [ x.toUpperCase(), 1500 ] ).flat();\n    profilepic = \"images/\" + props.sharedBasicInfo.image;\n  }\n\n  if (props.resumeBasicInfo) {\n    // var sectionName = props.resumeBasicInfo.section_name.about;\n    hello = props.resumeBasicInfo.description_header;\n    about = props.resumeBasicInfo.description;\n  }\n\n  const HeaderTitleTypeAnimation = React.memo( () => {\n    return <Typical className=\"title-styles\" steps={titles} loop={50} />\n  }, (props, prevProp) => true);\n\n  return (\n    <section id=\"about\">\n      <div className=\"col-md-12\">\n        {/* <h1 style={{ color: \"black\" }}>\n          <span>{sectionName}</span>\n        </h1> */}\n        <div className=\"row center\">\n          <div className=\"col-md-8 center-column\">\n            <h1 className=\"mb-0\">\n              {name}\n            </h1>\n            <div className=\"title-container\">\n              <HeaderTitleTypeAnimation />\n            </div>\n          </div>\n        </div>\n        <div className=\"row center mx-auto mb-5\">\n          <div className=\"col-md-4 mb-5 center\">\n            <div className=\"polaroid\">\n              <span style={{ cursor: \"auto\" }}>\n                <img\n                  height=\"175px\"\n                  src={profilepic}\n                  alt=\"Avatar placeholder\"\n                />\n              </span>\n            </div>\n          </div>\n\n          <div className=\"col-md-8 center\">\n            <div className=\"col-md-10\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <span\n                    className=\"iconify\"\n                    data-icon=\"emojione:red-circle\"\n                    data-inline=\"false\"\n                  ></span>{\" \"}\n                  &nbsp;{\" \"}\n                  <span\n                    className=\"iconify\"\n                    data-icon=\"twemoji:yellow-circle\"\n                    data-inline=\"false\"\n                  ></span>{\" \"}\n                  &nbsp;{\" \"}\n                  <span\n                    className=\"iconify\"\n                    data-icon=\"twemoji:green-circle\"\n                    data-inline=\"false\"\n                  ></span>\n                </div>\n                <div\n                  className=\"card-body font-trebuchet text-justify ml-3 mr-3\"\n                  style={{\n                    height: \"auto\",\n                    fontSize: \"132%\",\n                    lineHeight: \"200%\",\n                  }}\n                >\n                  <br />\n                  <span className=\"wave\">{hello}</span>\n                  <br />\n                  <br />\n                  {about}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport Badge from \"react-bootstrap/Badge\";\n\nconst Experience = (props) => {\n  let sectionName = '';\n  let work;\n  if (props.resumeExperience && props.resumeBasicInfo) {\n    sectionName = props.resumeBasicInfo.section_name.experience;\n    work = props.resumeExperience.map(function (work, i) {\n      const technologies = work.technologies;\n      const mainTechnologies = work.mainTech;\n      const icon = work.iconClass;\n\n      const mainTech = mainTechnologies.map((technology, i) => {\n        return (\n          <Badge pill className=\"main-badge mr-2 mb-2\" key={i}>\n            {technology}\n          </Badge>\n        );\n      });\n      const tech = technologies.map((technology, i) => {\n        return (\n          <Badge pill className=\"experience-badge mr-2 mb-2\" key={i}>\n            {technology}\n          </Badge>\n        );\n      });\n      return (\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date={work.years}\n          iconStyle={{\n            background: \"#AE944F\",\n            color: \"#fff\",\n            textAlign: \"center\",\n          }}\n          icon={<i className={`${icon} experience-icon`}></i>}\n          key={i}\n        >\n          <div style={{ textAlign: \"left\", marginBottom: \"4px\" }}>\n            {mainTech}\n          </div>\n\n          <h3\n            className=\"vertical-timeline-element-title\"\n            style={{ textAlign: \"left\" }}\n          >\n            {work.title}\n          </h3>\n          <h4\n            className=\"vertical-timeline-element-subtitle\"\n            style={{ textAlign: \"left\" }}\n          >\n            {work.company}\n          </h4>\n          <div style={{ textAlign: \"left\", marginTop: \"15px\" }}>{tech}</div>\n        </VerticalTimelineElement>\n      );\n    });\n  }\n\n  return (\n    <section id=\"resume\" className=\"pb-5\">\n      <div className=\"col-md-12 mx-auto\">\n        <div className=\"col-md-12\">\n          <h1 className=\"section-title\" style={{ color: \"black\" }}>\n            <span className=\"text-black\" style={{ textAlign: \"center\" }}>\n              {sectionName}\n            </span>\n          </h1>\n        </div>\n      </div>\n      <div className=\"col-md-8 mx-auto\">\n        <VerticalTimeline>\n          {work}\n          <VerticalTimelineElement\n            iconStyle={{\n              background: \"#AE944F\",\n              color: \"#fff\",\n              textAlign: \"center\",\n            }}\n            icon={\n              <i className=\"fas fa-hourglass-start mx-auto experience-icon\"></i>\n            }\n          />\n        </VerticalTimeline>\n      </div>\n    </section>\n  );\n}\n\nexport default Experience;\n","import React from \"react\";\n\nconst Skills = (props) => {\n  let sectionName = '';\n  let skills = [];\n  if (props.sharedSkills && props.resumeBasicInfo) {\n    sectionName = props.resumeBasicInfo.section_name.skills;\n    skills = props.sharedSkills.icons.map((skills, i) => {\n      return (\n        <li className=\"list-inline-item mx-3\" key={i}>\n          <span>\n            <div className=\"text-center skills-tile\">\n              <i className={skills.class} style={{ fontSize: \"220%\" }}>\n                <p\n                  className=\"text-center\"\n                  style={{ fontSize: \"30%\", marginTop: \"4px\" }}\n                >\n                  {skills.name}\n                </p>\n              </i>\n            </div>\n          </span>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <section id=\"skills\">\n      <div className=\"col-md-12\">\n        <div className=\"col-md-12\">\n          <h1 className=\"section-title\">\n            <span className=\"text-white\">{sectionName}</span>\n          </h1>\n        </div>\n        <div className=\"col-md-12 text-center\">\n          <ul className=\"list-inline mx-auto skill-icon\">{skills}</ul>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Skills;\n","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport \"./App.scss\";\n// import Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport Experience from \"./components/Experience\";\n// import Projects from \"./components/Projects\";\nimport Skills from \"./components/Skills\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      foo: \"bar\",\n      resumeData: {},\n      sharedData: {},\n    };\n  }\n\n  applyPickedLanguage(pickedLanguage) {\n    document.documentElement.lang = pickedLanguage;\n    const resumePath = `res_primaryLanguage.json`;\n    this.loadResumeFromPath(resumePath);\n  }\n\n  componentDidMount() {\n    this.loadSharedData();\n    this.applyPickedLanguage(window.$primaryLanguage);\n  }\n\n  loadResumeFromPath(path) {\n    $.ajax({\n      url: path,\n      dataType: \"json\",\n      cache: false,\n      success: function (data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        alert(err);\n      },\n    });\n  }\n\n  loadSharedData() {\n    $.ajax({\n      url: `portfolio_shared_data.json`,\n      dataType: \"json\",\n      cache: false,\n      success: function (data) {\n        this.setState({ sharedData: data });\n        document.title = `${this.state.sharedData.basic_info.name}`;\n      }.bind(this),\n      error: function (xhr, status, err) {\n        alert(err);\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <Header sharedData={this.state.sharedData.basic_info} /> */}\n        <About\n          resumeBasicInfo={this.state.resumeData.basic_info}\n          sharedBasicInfo={this.state.sharedData.basic_info}\n        />\n        {/* <Projects\n          resumeProjects={this.state.resumeData.projects}\n          resumeBasicInfo={this.state.resumeData.basic_info}\n        /> */}\n        <Skills\n          sharedSkills={this.state.sharedData.skills}\n          resumeBasicInfo={this.state.resumeData.basic_info}\n        />\n        <Experience\n          resumeExperience={this.state.resumeData.experience}\n          resumeBasicInfo={this.state.resumeData.basic_info}\n        />\n        <Footer sharedBasicInfo={this.state.sharedData.basic_info} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/* GLOBAL VARIABLES */\n\nwindow.$primaryLanguage = 'en';\nwindow.$secondaryLanguage = 'pl';\nwindow.$primaryLanguageIconId = 'primary-lang-icon';\nwindow.$secondaryLanguageIconId = 'secondary-lang-icon';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}